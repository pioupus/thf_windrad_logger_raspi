<?xml version='1.0' encoding='UTF-8'?>
<RPC command_id_start="1" hash="1cc4976a0fbe5db66e1451e70334ea7c" prefix="RPC_TRANSMISSION_" projectname="RPC" version_number="0"><function name="RPC_TRANSMISSION_get_hash"><declaration>RPC_RESULT RPC_TRANSMISSION_get_hash(unsigned char hash_inout[16], uint32_t hash_index_inout[1], unsigned char start_command_id_out[1], uint16_t version_out[1]);</declaration><request ID="0"><parameter bits="128" ctype="unsigned char [16]" name="hash_inout" position="1" type="array"><array bits="8" ctype="unsigned char" elements="16" type="integer"><integer signed="False" /></array></parameter><parameter bits="32" ctype="uint32_t [1]" name="hash_index_inout" position="2" type="array"><array bits="32" ctype="uint32_t" elements="1" type="integer"><integer signed="False" /></array></parameter></request><reply ID="1"><parameter bits="128" ctype="unsigned char [16]" name="hash_inout" position="1" type="array"><array bits="8" ctype="unsigned char" elements="16" type="integer"><integer signed="False" /></array></parameter><parameter bits="32" ctype="uint32_t [1]" name="hash_index_inout" position="2" type="array"><array bits="32" ctype="uint32_t" elements="1" type="integer"><integer signed="False" /></array></parameter><parameter bits="8" ctype="unsigned char [1]" name="start_command_id_out" position="3" type="array"><array bits="8" ctype="unsigned char" elements="1" type="integer"><integer signed="False" /></array></parameter><parameter bits="16" ctype="uint16_t [1]" name="version_out" position="4" type="array"><array bits="16" ctype="uint16_t" elements="1" type="integer"><integer signed="False" /></array></parameter></reply></function><function name="set_calibration_data"><declaration>RPC_RESULT set_calibration_data(calibration_coefficients_t calibration_data_pos_in[11], calibration_coefficients_t calibration_data_neg_in[11]);</declaration><request ID="2"><parameter bits="1056" ctype="calibration_coefficients_t [11]" name="calibration_data_pos_in" position="1" type="array"><array bits="12" ctype="calibration_coefficients_t" elements="11" type="struct"><parameter bits="32" ctype="int32_t" memberpos="1" name="c0_over_65536" type="integer"><integer signed="True" /></parameter><parameter bits="32" ctype="int32_t" memberpos="2" name="c1_over_65536" type="integer"><integer signed="True" /></parameter><parameter bits="32" ctype="int32_t" memberpos="3" name="c2_over_65536" type="integer"><integer signed="True" /></parameter></array></parameter><parameter bits="1056" ctype="calibration_coefficients_t [11]" name="calibration_data_neg_in" position="2" type="array"><array bits="12" ctype="calibration_coefficients_t" elements="11" type="struct"><parameter bits="32" ctype="int32_t" memberpos="1" name="c0_over_65536" type="integer"><integer signed="True" /></parameter><parameter bits="32" ctype="int32_t" memberpos="2" name="c1_over_65536" type="integer"><integer signed="True" /></parameter><parameter bits="32" ctype="int32_t" memberpos="3" name="c2_over_65536" type="integer"><integer signed="True" /></parameter></array></parameter></request><reply ID="3" /></function><function name="get_calibration_data_positive"><declaration>RPC_RESULT get_calibration_data_positive(calibration_coefficients_t return_value_out[1]);</declaration><request ID="4" /><reply ID="5"><parameter bits="96" ctype="calibration_coefficients_t [1]" name="return_value_out" position="1" type="array"><array bits="12" ctype="calibration_coefficients_t" elements="1" type="struct"><parameter bits="32" ctype="int32_t" memberpos="1" name="c0_over_65536" type="integer"><integer signed="True" /></parameter><parameter bits="32" ctype="int32_t" memberpos="2" name="c1_over_65536" type="integer"><integer signed="True" /></parameter><parameter bits="32" ctype="int32_t" memberpos="3" name="c2_over_65536" type="integer"><integer signed="True" /></parameter></array></parameter></reply></function><function name="get_calibration_data_negative"><declaration>RPC_RESULT get_calibration_data_negative(calibration_coefficients_t return_value_out[1]);</declaration><request ID="6" /><reply ID="7"><parameter bits="96" ctype="calibration_coefficients_t [1]" name="return_value_out" position="1" type="array"><array bits="12" ctype="calibration_coefficients_t" elements="1" type="struct"><parameter bits="32" ctype="int32_t" memberpos="1" name="c0_over_65536" type="integer"><integer signed="True" /></parameter><parameter bits="32" ctype="int32_t" memberpos="2" name="c1_over_65536" type="integer"><integer signed="True" /></parameter><parameter bits="32" ctype="int32_t" memberpos="3" name="c2_over_65536" type="integer"><integer signed="True" /></parameter></array></parameter></reply></function><function name="get_sample_data"><declaration>RPC_RESULT get_sample_data(int16_t samples_out[128], adc_sample_channel_t channel);</declaration><request ID="8"><parameter bits="8" ctype="adc_sample_channel_t" name="channel" position="1" type="enum"><enum name="adc_sample_channel_curr_l1" value="0" /><enum name="adc_sample_channel_curr_l2" value="1" /><enum name="adc_sample_channel_curr_l3" value="2" /><enum name="adc_sample_channel_vref" value="3" /><enum name="adc_sample_channel_volt_l12" value="4" /><enum name="adc_sample_channel_volt_l23" value="5" /><enum name="adc_sample_channel_volt_l31" value="6" /><enum name="adc_sample_channel_aux_volt" value="7" /><enum name="adc_sample_channel_temp_l1" value="8" /><enum name="adc_sample_channel_temp_l2" value="9" /><enum name="adc_sample_channel_temp_l3" value="10" /></parameter></request><reply ID="9"><parameter bits="2048" ctype="int16_t [128]" name="samples_out" position="1" type="array"><array bits="16" ctype="int16_t" elements="128" type="integer"><integer signed="True" /></array></parameter></reply></function><function name="get_power_sensor_data"><declaration>RPC_RESULT get_power_sensor_data(power_sensor_data_t return_value_out[1]);</declaration><request ID="10" /><reply ID="11"><parameter bits="256" ctype="power_sensor_data_t [1]" name="return_value_out" position="1" type="array"><array bits="32" ctype="power_sensor_data_t" elements="1" type="struct"><parameter bits="16" ctype="int16_t" memberpos="1" name="current_l1_avg" type="integer"><integer signed="True" /></parameter><parameter bits="16" ctype="int16_t" memberpos="2" name="current_l2_avg" type="integer"><integer signed="True" /></parameter><parameter bits="16" ctype="int16_t" memberpos="3" name="current_l3_avg" type="integer"><integer signed="True" /></parameter><parameter bits="16" ctype="uint16_t" memberpos="4" name="current_l1_eff" type="integer"><integer signed="False" /></parameter><parameter bits="16" ctype="uint16_t" memberpos="5" name="current_l2_eff" type="integer"><integer signed="False" /></parameter><parameter bits="16" ctype="uint16_t" memberpos="6" name="current_l3_eff" type="integer"><integer signed="False" /></parameter><parameter bits="16" ctype="int16_t" memberpos="7" name="voltage_l12_avg" type="integer"><integer signed="True" /></parameter><parameter bits="16" ctype="int16_t" memberpos="8" name="voltage_l23_avg" type="integer"><integer signed="True" /></parameter><parameter bits="16" ctype="int16_t" memberpos="9" name="voltage_l31_avg" type="integer"><integer signed="True" /></parameter><parameter bits="16" ctype="uint16_t" memberpos="10" name="voltage_l12_eff" type="integer"><integer signed="False" /></parameter><parameter bits="16" ctype="uint16_t" memberpos="11" name="voltage_l23_eff" type="integer"><integer signed="False" /></parameter><parameter bits="16" ctype="uint16_t" memberpos="12" name="voltage_l31_eff" type="integer"><integer signed="False" /></parameter><parameter bits="16" ctype="uint16_t" memberpos="13" name="temperature_l1" type="integer"><integer signed="False" /></parameter><parameter bits="16" ctype="uint16_t" memberpos="14" name="temperature_l2" type="integer"><integer signed="False" /></parameter><parameter bits="16" ctype="uint16_t" memberpos="15" name="temperature_l3" type="integer"><integer signed="False" /></parameter><parameter bits="16" ctype="int16_t" memberpos="16" name="voltage_aux" type="integer"><integer signed="True" /></parameter></array></parameter></reply></function><function name="set_unix_date_time"><declaration>RPC_RESULT set_unix_date_time(uint32_t unix_date_time);</declaration><request ID="12"><parameter bits="32" ctype="uint32_t" name="unix_date_time" position="1" type="integer"><integer signed="False" /></parameter></request><reply ID="13" /></function><function name="get_unix_date_time"><declaration>RPC_RESULT get_unix_date_time(uint32_t return_value_out[1]);</declaration><request ID="14" /><reply ID="15"><parameter bits="32" ctype="uint32_t [1]" name="return_value_out" position="1" type="array"><array bits="32" ctype="uint32_t" elements="1" type="integer"><integer signed="False" /></array></parameter></reply></function><function name="get_device_descriptor"><declaration>RPC_RESULT get_device_descriptor(device_descriptor_t return_value_out[1]);</declaration><request ID="16" /><reply ID="17"><parameter bits="400" ctype="device_descriptor_t [1]" name="return_value_out" position="1" type="array"><array bits="50" ctype="device_descriptor_t" elements="1" type="struct"><parameter bits="32" ctype="uint32_t" memberpos="1" name="githash" type="integer"><integer signed="False" /></parameter><parameter bits="32" ctype="uint32_t" memberpos="2" name="gitDate_unix" type="integer"><integer signed="False" /></parameter><parameter bits="32" ctype="uint32_t" memberpos="3" name="serialnumber" type="integer"><integer signed="False" /></parameter><parameter bits="16" ctype="uint16_t" memberpos="4" name="deviceID" type="integer"><integer signed="False" /></parameter><parameter bits="96" ctype="uint8_t [12]" memberpos="5" name="guid" type="array"><array bits="8" ctype="uint8_t" elements="12" type="integer"><integer signed="False" /></array></parameter><parameter bits="8" ctype="uint8_t" memberpos="6" name="boardRevision" type="integer"><integer signed="False" /></parameter><parameter bits="120" ctype="char [15]" memberpos="7" name="name" type="array"><array bits="8" ctype="char" elements="15" type="character" /></parameter><parameter bits="64" ctype="char [8]" memberpos="8" name="version" type="array"><array bits="8" ctype="char" elements="8" type="character" /></parameter></array></parameter></reply></function></RPC>